name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test-push-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Set up Python
      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      # 4️⃣ Run tests
      - name: Run tests
        run: pytest tests/test_app.py

      # 5️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # 6️⃣ Login to Amazon ECR
      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin 699475946208.dkr.ecr.us-east-1.amazonaws.com

      # 7️⃣ Build Docker image
      - name: Build Docker image
        run: docker build -t flask-app .

      # 8️⃣ Tag Docker image
      - name: Tag Docker image
        run: docker tag flask-app:latest 699475946208.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest

      # 9️⃣ Push Docker image to ECR
      - name: Push Docker image to ECR
        run: docker push 699475946208.dkr.ecr.us-east-1.amazonaws.com/flask-app:latest

      # 10️⃣ Update ECS service
      - name: Update ECS service
        run: |
          aws ecs update-service \
            --cluster flask-ec2-cluster \
            --service flask-task-service-qdmna7ii \
            --force-new-deployment
